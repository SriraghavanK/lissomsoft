# Google Sheets API credentials
GOOGLE_SHEETS_CLIENT_EMAIL=lissomsoft@lissomsoft.iam.gserviceaccount.com
GOOGLE_SHEETS_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDBxMOZmDDbONfY\neMcl4qOw7UNRRqYjw2AYtgLDDUhf9s4Vfgf5vYXyxi4arZwY89EQvVIcPox9oSF4\nbWe0rdwai65flps+lTHPz02SPDcyERQmhoh+jzOsnL7il35hlOogvZZaW4JAA0wa\nW1RdFD5Bhg7R58TwzP2i2akcT5z4qu1WISKWRjKLoNLXkdEl1sW9oZd9DhB9CWmt\n5iXmLA8CmzWk9KNHIFaIqXvsaoZV74pbAi+47ydhww5ptSjWLkny5rA1bELFbEKe\nMrXZd5t1tS8R50hbOpeQpN1008Zl7cPCp/UBFGB482APdy9F9E+3oPK1Kq5CCAh4\n8gssAMPbAgMBAAECggEATbv1qmMrSm8R7IZ7gj/bYmm0xWDd2uAQ56jxD7X+8Hyv\nLWEbqv10xLHrogk+46XAnAIPdERFkUq4hjsBzTKoZ7/cqv1c92zcCF3GZWGh1QST\n/GahUIB7fwZ876NN8LDQgmT8cfBfHvYTrEkyXYr29Mtmm5/q2p2qLRA77x8jPoCD\nrjZmI50ojJitm/cHal3knY1DFdAJOFJ2LInMgw/9wRkwB18nNjXpc9sFqVbmqlXt\n9QDWiYpxJfcB3PYgPgKUHcmtQ7lM7f5g1gT56NICT2mJuEUMbXxBd8HNhY1JPbPg\nRGJdkTvglG92nkC+pHGry4/YrR3N7I+h12RH/Mm7UQKBgQD91DOaSkp1MneHM6QA\nqIft/KuToY6fQ4zaIRlQISv4OjoRXytkysWfkffaIeBarajC7A8eZoKp65C+7XVw\n4/M5LbRnbcgyufcEdLXTz3thN3JeY14K8eqG7uGPS7uu3MbXBzSH8BU9QbZf2w2O\nyHW4AB4R//WMZtVsTHp+NRJWcQKBgQDDbQ0Nb3UJXMp+gUYP2B3y3LAx1bGCch/2\nR7Ot1apImKY5cLM6Wo5abPMoKbaa8GW9Y+3goOO2eQEOv9Ge1UyMCrc1UQsyAmZL\nGAHDqpy9j9WGo4QdxowoQPIGiWKSeZ2UeAGgHw6weNm9zl2N15A+VDtGRlPqU9fh\nuslWb9BdCwKBgHYEHsYC+qGJCGgVS5B+y0yMqR2oBQ7psmiM8R7/fVkZgXwoOp3P\nZZkungWOsKiYi5mtdc4VrXThsNgEwhDt+10/cdyQ/38OVdp9hTjpBB2MUSGvo78F\nAZ0hHkCo3qeLwOujTvpRVx63GdtxltknPQyDCXgnAPz5pwuGd4GMnW0RAoGAVcZe\njUAXcYWNx1q8QqYL9xXQK/9sSyIGT1WHUsxOUlDV3K5PrFQk2SGq1D0CzhynuynK\nNebIK8YOpcehnQJn96uYYElzDX8qINmnpJcU9srT4KWSjnMf/2cKE75nSn0gohLO\nO9aF3wUcJQgX3fL4d7MG1UB3AonMXmJajprDLKMCgYAgiUkzWwGV/iLvLqr/OPM9\nkVuTSjIpLS5bO4ux9ulywyTwftYRPFcMRkOa3FCfTzdhwfHplsRkCp1UZe0QFQK2\nvBPlzub2uM464XTJUzKj9NxOO1Y25e1ZO+w54SRSWkWh7w3oGlwkryDhJFQi9InV\nc6Eh3WCEKXf8/+BCBdiDiQ==\n-----END PRIVATE KEY-----\n"
GOOGLE_SHEETS_SPREADSHEET_ID=1_Gw4hXWdLIFMWPsuT5lpSfxJREptJILRwacCu7ZjhhU

# Email credentials
EMAIL_USER=testing143web@gmail.com
EMAIL_PASSWORD=qirrhkqrvkheoxfa

// Replace the existing navItems array with this updated structure
const home = {
  name: "Home",
  path: "/",
  icon: "home"
}

const navItems = [
  {
    title: "SOLUTIONS",
    id: "solutionsDropdown",
    items: [
      {
        name: "Risk Management",
        path: "/risk-management",
        icon: "shield-alt",
      },
      {
        name: "Digital Transformation",
        path: "/digital-transformation",
        icon: "digital-tachograph",
      },
      { name: "Cloud Services", path: "/cloud-services", icon: "cloud" },
      {
        name: "Growth Marketing",
        path: "/growth-marketing",
        icon: "chart-line",
      },
    ],
  },
  {
    title: "WHO WE ARE",
    id: "aboutDropdown",
    items: [
      { name: "About Us", path: "/about", icon: "info-circle" },
      { name: "Clients", path: "/client", icon: "users" },
      { name: "Careers", path: "/career", icon: "briefcase" },
    ],
  },
]

// Update the singleNavItems array
const singleNavItems = ["PARTNERS", "MYSMARTGRC", "RESOURCES", "CONTACT"]

// Then in your desktop navigation section, add the home button before the dropdowns:
<div className="desktop-nav">
  <motion.ul
    className="navbar-nav ms-auto"
    initial="hidden"
    animate="visible"
    variants={{
      hidden: { opacity: 0 },
      visible: {
        opacity: 1,
        transition: {
          staggerChildren: 0.1,
        },
      },
    }}
  >
    {/* Home Button */}
    <motion.li
      className="nav-item"
      variants={{
        hidden: { opacity: 0, y: -20 },
        visible: { opacity: 1, y: 0 },
      }}
    >
      <NavLink
        className={({ isActive }) => `nav-link home-link ${isActive ? "active" : ""}`}
        to={home.path}
        onClick={() => setIsOpen(false)}
      >
        <span className="home-icon-container">
          <i className={`fas fa-${home.icon}`}></i>
          <div className="home-icon-glow"></div>
        </span>
      </NavLink>
    </motion.li>

    {/* Existing Dropdown Items */}
    {navItems.map((dropdown, index) => (
      // ... existing dropdown code
    ))}

    {/* Simple Nav Items */}
    {singleNavItems.map((item, index) => (
      // ... existing single nav items code
    ))}
  </motion.ul>
</div>



{/* Mobile Menu Content */}
<div className="mobile-menu-content">
  {/* Add Home Link - New Addition */}
  <motion.a
    href="/"
    className="mobile-menu-item home-item"
    variants={mobileItemVariants}
    onClick={(e) => {
      e.preventDefault();
      window.location.href = '/';
      setIsOpen(false);
    }}
    whileHover={{ x: 5 }}
    whileTap={{ scale: 0.98 }}
  >
    <span className="mobile-item-content">
      <i className="fas fa-home"></i>
      <span className="ms-2">Home</span>
    </span>
  </motion.a>

  {/* Main Navigation */}
  <div className="mobile-nav-main">
    {/* Rest of your mobile navigation code... */}




{singleNavItems.map((item, index) => (
  <motion.li
    className="nav-item"
    key={item}
    variants={{
      hidden: { opacity: 0, y: -20 },
      visible: { opacity: 1, y: 0 },
    }}
  >
    <NavLink
      className={({ isActive }) =>
        `nav-link fw-semibold ${isActive ? "active" : ""} ${
          item === "CONTACT" ? "contact-btn" : ""
        }`
      }
      to={`/${item.toLowerCase()}`}
      target={item === "MYSMARTGRC" ? "_blank" : undefined}
      rel={item === "MYSMARTGRC" ? "noopener noreferrer" : undefined}
      onClick={(e) => {
        if (item === "MYSMARTGRC") {
          e.preventDefault();
          window.open("/mysmartgrc", "_blank");
        }
        setIsOpen(false);
      }}
    >
      <span className="nav-text">{item}</span>
      {item !== "CONTACT" && (
        <span className="nav-hover-effect"></span>
      )}
      {item === "CONTACT" && (
        <>
          <span className="btn-glow"></span>
          <motion.span
            className="btn-pulse-ring"
            animate={{
              scale: [1, 1.2, 1],
              opacity: [0.7, 0, 0.7],
            }}
            transition={{
              duration: 2,
              repeat: Number.POSITIVE_INFINITY,
              repeatType: "loop",
            }}
          />
        </>
      )}
    </NavLink>
  </motion.li>
))}
